/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package kp.cbs.editor.utils;

import java.util.Objects;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JComboBox;
import javax.swing.JDialog;
import kp.cbs.creature.attack.effects.SecondaryEffect;
import kp.cbs.creature.attack.effects.StatAlterationSecondaryEffect;
import kp.cbs.editor.AttackEditor;
import kp.cbs.utils.Utils;

/**
 *
 * @author Asus
 */
public class StatAlterationSecondaryEffectEditor extends JDialog
{
    private final StatAlterationSecondaryEffect effect;
    
    private StatAlterationSecondaryEffectEditor(AttackEditor parent, StatAlterationSecondaryEffect effect)
    {
        super(parent, true);
        this.effect = Objects.requireNonNull(effect);
        initComponents();
        init();
    }
    
    private void init()
    {
        setResizable(false);
        Utils.focus(this);
        
        attack.setModel(new DefaultComboBoxModel<>(AttackEditor.generateIntegerRange(-6, 6, 1)));
        defense.setModel(new DefaultComboBoxModel<>(AttackEditor.generateIntegerRange(-6, 6, 1)));
        spAttack.setModel(new DefaultComboBoxModel<>(AttackEditor.generateIntegerRange(-6, 6, 1)));
        spDefense.setModel(new DefaultComboBoxModel<>(AttackEditor.generateIntegerRange(-6, 6, 1)));
        speed.setModel(new DefaultComboBoxModel<>(AttackEditor.generateIntegerRange(-6, 6, 1)));
        accuracy.setModel(new DefaultComboBoxModel<>(AttackEditor.generateIntegerRange(-6, 6, 1)));
        evasion.setModel(new DefaultComboBoxModel<>(AttackEditor.generateIntegerRange(-6, 6, 1)));
        
        probability.setModel(new DefaultComboBoxModel<>(AttackEditor.generateIntegerRange(1, 100, 1)));
        
        
        attack.setSelectedItem(effect.getAttackLevels());
        defense.setSelectedItem(effect.getDefenseLevels());
        spAttack.setSelectedItem(effect.getSpecialAttackLevels());
        spDefense.setSelectedItem(effect.getSpecialDefenseLevels());
        speed.setSelectedItem(effect.getSpeedLevels());
        accuracy.setSelectedItem(effect.getAccuracyLevels());
        evasion.setSelectedItem(effect.getEvasionLevels());
        
        probability.setSelectedItem(effect.getProbability());
        selfTarget.setSelected(effect.isSelfTargetEnabled());
    }
    
    public static final void execute(AttackEditor parent, SecondaryEffect effect)
    {
        if(effect instanceof StatAlterationSecondaryEffect)
        {
            StatAlterationSecondaryEffectEditor editor = new StatAlterationSecondaryEffectEditor(parent, (StatAlterationSecondaryEffect) effect);
            editor.setVisible(true);
        }
    }
    
    private void store()
    {
        effect.setAttackLevels(value(attack));
        effect.setDefenseLevels(value(defense));
        effect.setSpecialAttackLevels(value(spAttack));
        effect.setSpecialDefenseLevels(value(spDefense));
        effect.setSpeedLevels(value(speed));
        effect.setAccuracyLevels(value(accuracy));
        effect.setEvasionLevels(value(evasion));
        
        effect.setProbability(value(probability));
        effect.setSelfTargetEnabled(selfTarget.isSelected());
    }
    
    @Override
    public void dispose()
    {
        store();
        super.dispose();
    }
    
    private static int value(JComboBox<Integer> box)
    {
        try { return ((Number) box.getSelectedItem()).intValue(); }
        catch(Throwable ex) { return 0; }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jPanel1 = new javax.swing.JPanel();
        attack = new javax.swing.JComboBox<>();
        defense = new javax.swing.JComboBox<>();
        spAttack = new javax.swing.JComboBox<>();
        spDefense = new javax.swing.JComboBox<>();
        speed = new javax.swing.JComboBox<>();
        accuracy = new javax.swing.JComboBox<>();
        evasion = new javax.swing.JComboBox<>();
        jPanel2 = new javax.swing.JPanel();
        probability = new javax.swing.JComboBox<>();
        selfTarget = new javax.swing.JCheckBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Propiedades de alteraciones de estadisticas");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Alteraciones en estadisticas"));
        jPanel1.setLayout(new java.awt.GridBagLayout());

        attack.setBorder(javax.swing.BorderFactory.createTitledBorder("Ataque"));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.3;
        jPanel1.add(attack, gridBagConstraints);

        defense.setBorder(javax.swing.BorderFactory.createTitledBorder("Defensa"));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.3;
        jPanel1.add(defense, gridBagConstraints);

        spAttack.setBorder(javax.swing.BorderFactory.createTitledBorder(" Ataque Especial"));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.3;
        jPanel1.add(spAttack, gridBagConstraints);

        spDefense.setBorder(javax.swing.BorderFactory.createTitledBorder("Defensa Especial"));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.3;
        jPanel1.add(spDefense, gridBagConstraints);

        speed.setBorder(javax.swing.BorderFactory.createTitledBorder("Velocidad"));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
        gridBagConstraints.ipadx = 175;
        gridBagConstraints.weightx = 1.4;
        gridBagConstraints.weighty = 0.3;
        jPanel1.add(speed, gridBagConstraints);

        accuracy.setBorder(javax.swing.BorderFactory.createTitledBorder("Precisión"));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.3;
        jPanel1.add(accuracy, gridBagConstraints);

        evasion.setBorder(javax.swing.BorderFactory.createTitledBorder("Evasión"));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.weighty = 0.3;
        jPanel1.add(evasion, gridBagConstraints);

        jPanel2.setLayout(new java.awt.GridLayout(1, 2));

        probability.setBorder(javax.swing.BorderFactory.createTitledBorder("Probabilidad de Ocurrir"));
        jPanel2.add(probability);

        selfTarget.setText("Apuntar al Usuario");
        selfTarget.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jPanel2.add(selfTarget);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, 388, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, 42, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<Integer> accuracy;
    private javax.swing.JComboBox<Integer> attack;
    private javax.swing.JComboBox<Integer> defense;
    private javax.swing.JComboBox<Integer> evasion;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JComboBox<Integer> probability;
    private javax.swing.JCheckBox selfTarget;
    private javax.swing.JComboBox<Integer> spAttack;
    private javax.swing.JComboBox<Integer> spDefense;
    private javax.swing.JComboBox<Integer> speed;
    // End of variables declaration//GEN-END:variables
}
