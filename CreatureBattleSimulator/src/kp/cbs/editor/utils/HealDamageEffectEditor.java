/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package kp.cbs.editor.utils;

import java.text.ParseException;
import java.util.Objects;
import javax.swing.JDialog;
import javax.swing.JFormattedTextField;
import kp.cbs.battle.weather.WeatherId;
import kp.cbs.creature.attack.effects.DamageEffect;
import kp.cbs.creature.attack.effects.HealDamageEffect;
import kp.cbs.editor.AttackEditor;
import kp.cbs.utils.Utils;

/**
 *
 * @author Asus
 */
public class HealDamageEffectEditor extends JDialog
{
    private final HealDamageEffect effect;
    
    public HealDamageEffectEditor(AttackEditor parent, HealDamageEffect effect) {
        super(parent, true);
        this.effect = Objects.requireNonNull(effect);
        initComponents();
        init();
    }
    
    private void init()
    {
        setResizable(false);
        Utils.focus(this);
        
        no.setValue(effect.getNormalHealPercentaage());
        rain.setValue(effect.getWeatherHealPercentage(WeatherId.RAIN));
        sun.setValue(effect.getWeatherHealPercentage(WeatherId.INTENSE_SUN));
        sandstorm.setValue(effect.getWeatherHealPercentage(WeatherId.SANDSTORM));
        hail.setValue(effect.getWeatherHealPercentage(WeatherId.HAIL));
        fog.setValue(effect.getWeatherHealPercentage(WeatherId.FOG));
        electricStorm.setValue(effect.getWeatherHealPercentage(WeatherId.ELECTRIC_STORM));
    }
    
    public static final void execute(AttackEditor parent, DamageEffect effect)
    {
        if(effect instanceof HealDamageEffect)
        {
            HealDamageEffectEditor editor = new HealDamageEffectEditor(parent, (HealDamageEffect) effect);
            editor.setVisible(true);
        }
    }
    
    private void commit()
    {
        try
        {
            no.commitEdit();
            rain.commitEdit();
            sun.commitEdit();
            sandstorm.commitEdit();
            hail.commitEdit();
            fog.commitEdit();
            electricStorm.commitEdit();
        }
        catch(ParseException ex) {}
    }
    
    private void store()
    {
        effect.setNormalHealPercentage(value(no));
        effect.setWeatherHealPercentage(WeatherId.RAIN, value(rain));
        effect.setWeatherHealPercentage(WeatherId.INTENSE_SUN, value(sun));
        effect.setWeatherHealPercentage(WeatherId.SANDSTORM, value(sandstorm));
        effect.setWeatherHealPercentage(WeatherId.HAIL, value(hail));
        effect.setWeatherHealPercentage(WeatherId.FOG, value(fog));
        effect.setWeatherHealPercentage(WeatherId.ELECTRIC_STORM, value(electricStorm));
    }
    
    @Override
    public void dispose()
    {
        commit();
        store();
        super.dispose();
    }
    
    private static int value(JFormattedTextField field)
    {
        try
        {
            return Utils.range(0, 256, ((Number) field.getValue()).intValue());
        }
        catch(Throwable ex) { return 0; }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        no = new javax.swing.JFormattedTextField();
        rain = new javax.swing.JFormattedTextField();
        sun = new javax.swing.JFormattedTextField();
        sandstorm = new javax.swing.JFormattedTextField();
        hail = new javax.swing.JFormattedTextField();
        fog = new javax.swing.JFormattedTextField();
        electricStorm = new javax.swing.JFormattedTextField();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Editar Propiedadeds de Effecto Heal");

        jPanel1.setLayout(new java.awt.GridLayout(4, 2));

        no.setBorder(javax.swing.BorderFactory.createTitledBorder("Sin Clima (X/256)"));
        no.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(java.text.NumberFormat.getIntegerInstance())));
        jPanel1.add(no);

        rain.setBorder(javax.swing.BorderFactory.createTitledBorder("En Lluvia (X/256)"));
        rain.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(java.text.NumberFormat.getIntegerInstance())));
        jPanel1.add(rain);

        sun.setBorder(javax.swing.BorderFactory.createTitledBorder("En Sol Intenso (X/256)"));
        sun.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(java.text.NumberFormat.getIntegerInstance())));
        jPanel1.add(sun);

        sandstorm.setBorder(javax.swing.BorderFactory.createTitledBorder("En Tormenta de arena (X/256)"));
        sandstorm.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(java.text.NumberFormat.getIntegerInstance())));
        jPanel1.add(sandstorm);

        hail.setBorder(javax.swing.BorderFactory.createTitledBorder("En Granizo (X/256)"));
        hail.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(java.text.NumberFormat.getIntegerInstance())));
        jPanel1.add(hail);

        fog.setBorder(javax.swing.BorderFactory.createTitledBorder("En Niebla (X/256)"));
        fog.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(java.text.NumberFormat.getIntegerInstance())));
        jPanel1.add(fog);

        electricStorm.setBorder(javax.swing.BorderFactory.createTitledBorder("En Tormenta el√©ctrica (X/256)"));
        electricStorm.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(java.text.NumberFormat.getIntegerInstance())));
        jPanel1.add(electricStorm);

        jButton1.setText("Extender valor sin clima a todos");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        int value = value(no);
        rain.setValue(value);
        sun.setValue(value);
        sandstorm.setValue(value);
        hail.setValue(value);
        fog.setValue(value);
        electricStorm.setValue(value);
    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JFormattedTextField electricStorm;
    private javax.swing.JFormattedTextField fog;
    private javax.swing.JFormattedTextField hail;
    private javax.swing.JButton jButton1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JFormattedTextField no;
    private javax.swing.JFormattedTextField rain;
    private javax.swing.JFormattedTextField sandstorm;
    private javax.swing.JFormattedTextField sun;
    // End of variables declaration//GEN-END:variables
}
