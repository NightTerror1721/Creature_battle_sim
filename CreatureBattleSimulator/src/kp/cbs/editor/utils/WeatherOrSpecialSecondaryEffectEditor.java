/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package kp.cbs.editor.utils;

import java.util.Objects;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JComboBox;
import javax.swing.JDialog;
import javax.swing.border.TitledBorder;
import kp.cbs.battle.weather.WeatherId;
import kp.cbs.creature.attack.effects.SecondaryEffect;
import kp.cbs.creature.attack.effects.SpecialSecondaryEffect;
import kp.cbs.creature.attack.effects.SpecialSecondaryEffect.SpecialEffectId;
import kp.cbs.creature.attack.effects.WeatherSecondaryEffect;
import kp.cbs.editor.AttackEditor;
import kp.cbs.utils.Utils;

/**
 *
 * @author Asus
 */
public class WeatherOrSpecialSecondaryEffectEditor extends JDialog
{
    private final SecondaryEffect effect;
    private final boolean special;
    
    public WeatherOrSpecialSecondaryEffectEditor(AttackEditor parent, SecondaryEffect effect, boolean isSpecial)
    {
        super(parent, true);
        this.effect = Objects.requireNonNull(effect);
        this.special = isSpecial;
        initComponents();
        init();
    }
    
    private void init()
    {
        setResizable(false);
        Utils.focus(this);
        
        setTitle(special ? "Efecto" : "Clima");
        ((TitledBorder) weatherOrEffect.getBorder()).setTitle(special ? "Efecto" : "Clima");
        weatherOrEffect.setModel(new DefaultComboBoxModel<>(special ? SpecialEffectId.values() : WeatherId.values()));
        probability.setModel(new DefaultComboBoxModel<>(AttackEditor.generateIntegerRange(1, 100, 1)));
        
        
        weatherOrEffect.setSelectedItem(special ? special().getEffect() : weather().getWeather());
        probability.setSelectedItem(effect.getProbability());
    }
    
    public static final void execute(AttackEditor parent, SecondaryEffect effect)
    {
        if(effect instanceof WeatherSecondaryEffect)
        {
            WeatherOrSpecialSecondaryEffectEditor editor = new WeatherOrSpecialSecondaryEffectEditor(parent, (WeatherSecondaryEffect) effect, false);
            editor.setVisible(true);
        }
        else if(effect instanceof SpecialSecondaryEffect)
        {
            WeatherOrSpecialSecondaryEffectEditor editor = new WeatherOrSpecialSecondaryEffectEditor(parent, (SpecialSecondaryEffect) effect, true);
            editor.setVisible(true);
        }
    }
    
    private void store()
    {
        if(special)
            special().setEffect(value2(weatherOrEffect, SpecialEffectId.EFFECT_CURSE));
        else weather().setWeather(value2(weatherOrEffect, WeatherId.RAIN));
        
        effect.setProbability(value(probability));
    }
    
    @Override
    public void dispose()
    {
        store();
        super.dispose();
    }
    
    private WeatherSecondaryEffect weather() { return (WeatherSecondaryEffect) effect; }
    private SpecialSecondaryEffect special() { return (SpecialSecondaryEffect) effect; }
    
    private static int value(JComboBox<Integer> box)
    {
        try { return ((Number) box.getSelectedItem()).intValue(); }
        catch(Throwable ex) { return 0; }
    }
    
    private static <E extends Enum<E>> E value2(JComboBox<Enum<?>> box, E defaultValue)
    {
        try {
            return (E) box.getSelectedItem();
        }
        catch(Throwable ex) { return defaultValue; }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        weatherOrEffect = new javax.swing.JComboBox<>();
        probability = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        getContentPane().setLayout(new java.awt.GridLayout(2, 1));

        weatherOrEffect.setToolTipText("");
        weatherOrEffect.setBorder(javax.swing.BorderFactory.createTitledBorder("Weather Or Special Effect"));
        getContentPane().add(weatherOrEffect);

        probability.setBorder(javax.swing.BorderFactory.createTitledBorder("Probabilidad"));
        getContentPane().add(probability);

        pack();
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<Integer> probability;
    private javax.swing.JComboBox<Enum<?>> weatherOrEffect;
    // End of variables declaration//GEN-END:variables
}
