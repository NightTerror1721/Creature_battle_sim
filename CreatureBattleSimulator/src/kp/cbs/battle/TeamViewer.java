/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package kp.cbs.battle;

import java.awt.Dialog;
import java.awt.GridLayout;
import java.util.LinkedList;
import java.util.List;
import java.util.Objects;
import javax.swing.JDialog;
import kp.cbs.creature.Creature;
import kp.cbs.utils.Utils;

/**
 *
 * @author mpasc
 */
public class TeamViewer extends JDialog
{
    private final Team team;
    private final boolean isMandatory;
    private Creature result;
    
    private TeamViewer(Dialog parent, Team team, Creature currentFighter, boolean isMandatory)
    {
        super(parent,true);
        initComponents();
        this.team = Objects.requireNonNull(team);
        this.isMandatory = isMandatory;
        this.result = null;
        init(currentFighter);
    }
    
    private void init(Creature currentFighter)
    {
        setResizable(false);
        Utils.focus(this);
        
        setTitle("Equipo - Selector de Luchador");
        
        GridLayout layout = new GridLayout(0, 2);
        layout.setColumns(2);
        grid.setLayout(layout);
        boolean first = true;
        for(var creature : teamCreatures(currentFighter))
        {
            CreatureTeamViewer viewer = new CreatureTeamViewer(this, creature, first, this::doAction);
            grid.add(viewer,null);
            if(first)
                first = false;
        }
        exit.setEnabled(!isMandatory);
        pack();
    }
    
    private void doAction(CreatureTeamViewer viewer)
    {
        result = viewer.getCreature();
        dispose();
    }
    
    private List<Creature> teamCreatures(Creature currentFighter)
    {
        var list = new LinkedList<Creature>();
        list.add(Objects.requireNonNull(currentFighter));
        int size = team.size();
        for(int i=0;i<size;i++)
        {
            var creature = team.getCreature(i);
            if(!creature.equals(currentFighter))
                list.add(creature);
        }
        return list;
    }
    
    public static final Creature open(Dialog parent, Team team, Creature currentFighter, boolean isMandatory)
    {
        var viewer = new TeamViewer(parent, team, currentFighter, isMandatory);
        viewer.setVisible(true);
        return viewer.result;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        exit = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        grid = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);

        jLabel1.setText("Equipo:");

        exit.setText("Atr√°s");
        exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitActionPerformed(evt);
            }
        });

        jScrollPane1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        javax.swing.GroupLayout gridLayout = new javax.swing.GroupLayout(grid);
        grid.setLayout(gridLayout);
        gridLayout.setHorizontalGroup(
            gridLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 706, Short.MAX_VALUE)
        );
        gridLayout.setVerticalGroup(
            gridLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 518, Short.MAX_VALUE)
        );

        jScrollPane1.setViewportView(grid);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane1)
                    .addComponent(exit, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 524, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(exit)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void exitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitActionPerformed
        dispose();
    }//GEN-LAST:event_exitActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton exit;
    private javax.swing.JPanel grid;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
